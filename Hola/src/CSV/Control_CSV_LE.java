package CSV;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.event.KeyEvent;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.ArrayList;

/**
 *
 * @author ep972
 */
public class Control_CSV_LE extends javax.swing.JPanel {

    private String[][] datos;
    private String[] nombreColumna;
    private int filaActual = 0;
    private int filasPorPagina;
    private int totalPorPagina = 5;

    /**
     * Creates new form Control_CSV_LE
     */
    public Control_CSV_LE() {
        initComponents();
        panelNavegacion.setVisible(false);
        PanelPaginacion.setVisible(false);
        Paginas.setVisible(false);
        Desplazamiento.setVisible(false);
        TableVisualizacion.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        controlPanel = new javax.swing.JPanel();
        btnCargarCSV = new javax.swing.JButton();
        panelNavegacion = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        TxtNumFilas = new javax.swing.JTextField();
        Desplazamiento = new javax.swing.JScrollPane();
        TableVisualizacion = new javax.swing.JTable();
        Paginas = new javax.swing.JScrollPane();
        PanelPaginacion = new javax.swing.JPanel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setBackground(new java.awt.Color(0, 51, 102));

        controlPanel.setBackground(new java.awt.Color(153, 204, 255));
        controlPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        controlPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.NW_RESIZE_CURSOR));

        btnCargarCSV.setText("Cargar CSV");
        btnCargarCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarCSVActionPerformed(evt);
            }
        });
        controlPanel.add(btnCargarCSV);

        panelNavegacion.setBackground(new java.awt.Color(153, 153, 255));

        jLabel1.setText("Mostrar n° de Columnas:");

        TxtNumFilas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TxtNumFilasKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TxtNumFilasKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout panelNavegacionLayout = new javax.swing.GroupLayout(panelNavegacion);
        panelNavegacion.setLayout(panelNavegacionLayout);
        panelNavegacionLayout.setHorizontalGroup(
            panelNavegacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelNavegacionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TxtNumFilas, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(87, Short.MAX_VALUE))
        );
        panelNavegacionLayout.setVerticalGroup(
            panelNavegacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelNavegacionLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelNavegacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(TxtNumFilas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12))
        );

        controlPanel.add(panelNavegacion);

        Desplazamiento.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        Desplazamiento.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        TableVisualizacion.setBackground(new java.awt.Color(204, 255, 204));
        TableVisualizacion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Desplazamiento.setViewportView(TableVisualizacion);

        PanelPaginacion.setBackground(new java.awt.Color(153, 153, 255));
        PanelPaginacion.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        PanelPaginacion.setForeground(new java.awt.Color(153, 153, 153));
        Paginas.setViewportView(PanelPaginacion);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(Desplazamiento, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(controlPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(Paginas)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(controlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Desplazamiento, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Paginas, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCargarCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarCSVActionPerformed
        // TODO add your handling code here:
        JFileChooser selectorArchivos = new JFileChooser();
        int valorDevuelto = selectorArchivos.showOpenDialog(this);
        if (valorDevuelto == JFileChooser.APPROVE_OPTION) {
            File archivoSeleccionado = selectorArchivos.getSelectedFile();
            cargarCSV(archivoSeleccionado);
        }
    }//GEN-LAST:event_btnCargarCSVActionPerformed

    private void TxtNumFilasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtNumFilasKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_TxtNumFilasKeyPressed

    private void TxtNumFilasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtNumFilasKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {

                int numFilas = Integer.parseInt(TxtNumFilas.getText().trim());
                if (numFilas > 0) {
                    totalPorPagina = numFilas;
                    paginaActual = 0;
                    actualizarTabla();
                    actualizarPanelPaginacion();
                } else {
                    JOptionPane.showMessageDialog(null, "Por favor, ingrese un número válido de filas.");
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Por favor, ingrese un número válido de filas.");
            }
        }
    }//GEN-LAST:event_TxtNumFilasKeyReleased

    private void cargarCSV(File file) {
        try (BufferedReader br = new BufferedReader(new FileReader(file))) {
            ArrayList<String[]> filas = new ArrayList<>();
            String linea;
            nombreColumna = br.readLine().split(",");

            while ((linea = br.readLine()) != null) {
                filas.add(linea.split(","));
            }

            datos = new String[filas.size()][nombreColumna.length];
            for (int i = 0; i < filas.size(); i++) {
                datos[i] = filas.get(i);
            }

            panelNavegacion.setVisible(true);
            PanelPaginacion.setVisible(true);
            Paginas.setVisible(true);
            Desplazamiento.setVisible(true);
            TableVisualizacion.setVisible(true);
            actualizarTabla();
            actualizarPanelPaginacion();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al cargar el archivo CSV: " + e.getMessage());
        }
    }

    private int paginaActual = 0;

    private void actualizarPanelPaginacion() {
        PanelPaginacion.removeAll();
        PanelPaginacion.setLayout(new BorderLayout()); // Cambiar a BorderLayout

        // Crear un panel para los botones de paginación
        JPanel panelBotones = new JPanel();
        panelBotones.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 0));

        int totalPaginas = (int) Math.ceil((double) datos.length / totalPorPagina);
        int inicioPagina = Math.max(0, paginaActual - 2);
        int finPagina = Math.min(totalPaginas, inicioPagina + 5);

        JButton btnAnterior = new JButton("Anterior");
        btnAnterior.setEnabled(paginaActual > 0);
        btnAnterior.addActionListener(evt -> {
            if (paginaActual > 0) {
                paginaActual--;
                actualizarTabla();
                actualizarPanelPaginacion();
            }
        });
        panelBotones.add(btnAnterior);

        for (int i = inicioPagina; i < finPagina; i++) {
            int pagina = i;
            JButton btnPagina = new JButton(String.valueOf(pagina + 1));
            btnPagina.setFont(new Font("Arial", Font.BOLD, 12));
            btnPagina.setEnabled(pagina != paginaActual);
            btnPagina.addActionListener(evt -> {
                paginaActual = pagina;
                actualizarTabla();
                actualizarPanelPaginacion();
            });
            panelBotones.add(btnPagina);
        }

        // Agregar botón de acceso directo a la última página con puntos suspensivos
        if (finPagina < totalPaginas) {
            JLabel lblSuspensivos = new JLabel("...");
            panelBotones.add(lblSuspensivos);

            JButton btnUltima = new JButton(String.valueOf(totalPaginas));
            btnUltima.setFont(new Font("Arial", Font.BOLD, 12));
            btnUltima.setEnabled(paginaActual != totalPaginas - 1);
            btnUltima.addActionListener(evt -> {
                paginaActual = totalPaginas - 1;
                actualizarTabla();
                actualizarPanelPaginacion();
            });
            panelBotones.add(btnUltima);
        }

        JButton btnSiguiente = new JButton("Siguiente");
        btnSiguiente.setEnabled(paginaActual < totalPaginas - 1);
        btnSiguiente.addActionListener(evt -> {
            if (paginaActual < totalPaginas - 1) {
                paginaActual++;
                actualizarTabla();
                actualizarPanelPaginacion();
            }
        });
        panelBotones.add(btnSiguiente);

        PanelPaginacion.add(panelBotones, BorderLayout.NORTH);

        int inicio = paginaActual * totalPorPagina;
        int fin = Math.min(inicio + totalPorPagina, datos.length);
        JLabel lblPaginaActual = new JLabel("                   Página: " + (paginaActual + 1) + " de " + totalPaginas + "                   Mostrando " + (fin - inicio) + " filas de " + datos.length + " filas");

        PanelPaginacion.add(lblPaginaActual, BorderLayout.SOUTH);

        PanelPaginacion.revalidate();
        PanelPaginacion.repaint();
    }

    private void actualizarTabla() {
        int inicio = paginaActual * totalPorPagina;
        int fin = Math.min(inicio + totalPorPagina, datos.length);

        if (inicio >= datos.length) {
            inicio = 0;
        }

        String[][] datosPagina = new String[fin - inicio][nombreColumna.length];
        System.arraycopy(datos, inicio, datosPagina, 0, fin - inicio);

        DefaultTableModel model = new DefaultTableModel(datosPagina, nombreColumna);
        TableVisualizacion.setModel(model);

        TableVisualizacion.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        for (int i = 0; i < nombreColumna.length; i++) {
            TableVisualizacion.getColumnModel().getColumn(i).setPreferredWidth(150); // Ajusta el ancho de las columnas
        }

        Desplazamiento.revalidate();
        Desplazamiento.repaint();
    }

    public static void main(String args[]) {
        SwingUtilities.invokeLater(() -> {
            JFrame frame = new JFrame("Lector de CSV");
            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            frame.setSize(550, 400);

            Control_CSV_LE lector = new Control_CSV_LE();
            frame.add(lector);
            frame.setVisible(true);

        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane Desplazamiento;
    private javax.swing.JScrollPane Paginas;
    private javax.swing.JPanel PanelPaginacion;
    private javax.swing.JTable TableVisualizacion;
    private javax.swing.JTextField TxtNumFilas;
    private javax.swing.JButton btnCargarCSV;
    private javax.swing.JPanel controlPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel panelNavegacion;
    // End of variables declaration//GEN-END:variables
}
